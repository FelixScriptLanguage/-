# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import easygui
from PyQt5.QtWidgets import QApplication,QMainWindow
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import pyttsx3
import requests
import sys
import json
import time
import geocoder
from datetime import datetime


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        desktop = QApplication.desktop()
        jisuan = 315
        kuan = desktop.width()-jisuan
        gao = 0
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(315, 665)
        MainWindow.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint)
        MainWindow.move(kuan,gao)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(0, 0, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(160, 0, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(0, 160, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(160, 160, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(0, 320, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(160, 320, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(0, 480, 151, 151))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setObjectName("pushButton_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "助盲"))
        self.pushButton.setText(_translate("MainWindow", "天气预报"))
        self.pushButton_2.setText(_translate("MainWindow", "时间播报"))
        self.pushButton_3.setText(_translate("MainWindow", "播放小说"))
        self.pushButton_4.setText(_translate("MainWindow", "听新闻"))
        self.pushButton_5.setText(_translate("MainWindow", "百度百科"))
        self.pushButton_6.setText(_translate("MainWindow", "路线规划"))
        self.pushButton_7.setText(_translate("MainWindow", "给我们\n"
"提建议"))
if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()#这是class文件
    ui.setupUi(MainWindow)
    def tianqiyubao():
        def weizhi():
            g = geocoder.ip('me')
            jingwei = g.latlng
            print()
            return g.city
        def getCookies():
            cookies = ""
            if len(sys.argv) > 1:
                try:
                    cookies = json.loads(sys.argv[1])["cookies"]
                except:
                    pass
            return cookies

        def jsonLoads(str):
            try:
                return json.loads(str)
            except:
                return None

        def air_temp(location, start=0):
            cookies = getCookies()
            headers = {"Cookie": cookies}
            params = {"location": location, "day": start}
            rep = requests.get("https://code.xueersi.com/api/ai/python_weather/temperature", params=params,
                               headers=headers)
            repDic = jsonLoads(rep.text)
            if repDic is None:
                raise Exception("天气查询失败,请稍后再试")
            if repDic["stat"] != 1:
                raise Exception(repDic["msg"])

            return int(repDic["data"])

        def fanyi(text):
            text = text.strip()
            if text == "":
                return ""

            params = {"text": text}
            cookies = getCookies()
            headers = {"Cookie": cookies}
            rep = requests.get("https://code.xueersi.com/api/ai/python_tts/translate", params=params,
                               headers=headers)
            repDic = jsonLoads(rep.text)
            if repDic is None:
                raise Exception("\033[31m服务请求超时，请稍后再试")

            if repDic["stat"] != 1:
                raise Exception(repDic["msg"])

            result = repDic["data"]["text"]
            return result

        city = weizhi()
        city = fanyi(city)
        print(city)
        engine = pyttsx3.init()
        t = air_temp(city)
        tem = str(t)
        engine.say(city + "今天的温度是" + tem + '摄氏度')
        if t >= 35:
            engine.say("温度过高，不宜外出")
            print("温度过高，不宜外出")
        if t >= 25 and t < 35:
            engine.say("适宜外出，可以穿衬衫")
            print("适宜外出，可以穿衬衫")
        if t >= 15 and t < 25:
            engine.say("温度偏低，建议外出穿毛衣")
            print("温度偏低，建议外出穿毛衣 ")
        if t >= 5 and t < 15:
            engine.say("温度低，建议穿羽绒服")
            print("温度低，建议穿羽绒服 ")
        if t < 5:
            engine.say("温度过低，不建议外出")
            print("温度过低，不建议外出 ")
        engine.runAndWait()
    def shijian():
        engine = pyttsx3.init()
        engine.say('现在是' + str(datetime.now().year) + '年' + str(datetime.now().month) + '月' + str(
            datetime.now().day) + '日' + str(datetime.now().hour) + '点' + str(datetime.now().minute) + '分')
        engine.runAndWait()
    def ditu():
        engine = pyttsx3.init()
        start = easygui.enterbox(title='起点',msg='请输入起点 写完后请按回车')

        end = easygui.enterbox(title='终点', msg='请输入终点 写完后请按回车')

        def getCookies():
            cookies = ""
            if len(sys.argv) > 1:
                try:
                    cookies = json.loads(sys.argv[1])["cookies"]
                except:
                    pass
            return cookies

        def jsonLoads(str):
            try:
                return json.loads(str)
            except:
                return None

        def get_sites(route_list, num):

            global g_routes
            if g_routes is None:
                raise Exception("请先调用get_routes函数")

            num = int(num)
            route = g_routes[num]
            return route["stops"]

        def get_routes(start, end, city=None):
            cookies = getCookies()
            headers = {"Cookie": cookies}

            params = {"address_origin": start, "address_destination": end, "city": city}
            rep = requests.get("http://code.xueersi.com/api/ai/python_map/routes", params=params, headers=headers)
            repDic = jsonLoads(rep.text)
            if repDic is None:
                raise Exception("高德地图服务请求超时，请稍后再试")

            if repDic["stat"] != 1:
                raise Exception(repDic["msg"])

            global g_routes
            g_routes = repDic["data"]

            route_names = []
            for route in g_routes:
                route_names.append(route["name"])

            return route_names
        route_list = get_routes(start, end)
        len1 = len(route_list)
        if len1 > 0:
            for i in range(len1):
                engine.say(i+route_list[i])
            engine.say("请输入要搭乘的路线的编号")
            num = easygui.enterbox(title='路线',msg='请输入要搭乘的路线的编号')
            bus_list = get_sites(route_list[i], num)
            len2 = len(bus_list)
            engine.say("途径以下站点：")
            for i in range(len2):
                engine.say(i+bus_list[i])
        engine.runAndWait()
    def baidubaike():
        import requests, bs4, os
        head = {
            "User-Agent": "Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11",
        }
        engine = pyttsx3.init()
        word = easygui.enterbox(title='百度百科',msg='请输入要查询的内容')
        try:
            url = "https://baike.baidu.com/search/word?word=" + word
            response = requests.get(url, headers=head)
            soup = bs4.BeautifulSoup(response.text, "lxml")
            data = soup.find(name="div", class_="lemma-summary").find_all(name="div")
            for n in data:
                engine.say(n.text)
        except:
            engine.say("查询出错")
        engine.runAndWait()
    def xiaoshuo():
        '''

        本人才疏学浅，爬取小说就留给各位了！

        '''
        engine = pyttsx3.init()
        engine.say('本人才疏学浅，爬取小说就留给各位了！')
        读小说 = open('小说.txt','r',encoding='UTF-8').read()
        engine.say(读小说)
        engine.runAndWait()
    def tingxinwen():
        engine = pyttsx3.init()
        engine.say('本人才疏学浅，爬取小说就留给各位了！')
        读新闻 = open('新闻.txt','r',encoding='UTF-8').read()
        engine.say(读新闻)
        engine.runAndWait()
    def tijianyi():
        engine = pyttsx3.init()
        engine.say('请向：felix995493zplb@126.com 发送你的建议')
        engine.runAndWait()
    ui.pushButton.clicked.connect(tianqiyubao)
    ui.pushButton_2.clicked.connect(shijian)
    ui.pushButton_6.clicked.connect(ditu)
    ui.pushButton_5.clicked.connect(baidubaike)
    ui.pushButton_3.clicked.connect(xiaoshuo)
    ui.pushButton_4.clicked.connect(tingxinwen)
    ui.pushButton_7.clicked.connect(tijianyi)
    MainWindow.show()
    sys.exit(app.exec_())